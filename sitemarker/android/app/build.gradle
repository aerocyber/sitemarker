plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    dependenciesInfo {
        includeInApk = false
        includeInBundle = false
    }
    
    namespace = "io.github.aerocyber.sitemarker"
    compileSdk = 36
    ndkVersion = "28.0.12674087"

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        
        applicationId = "io.github.aerocyber.sitemarker"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk = 23
        targetSdk = 35
        def envVersionCode = System.getenv("VERSION_CODE")
	if (!envVersionCode) {
		throw new GradleException("VERSION_CODE environment variable is required")
	}

        versionCode envVersionCode ? envVersionCode.toInteger() : flutter.versionCode
        versionName = flutter.versionName
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources = true
            proguardFiles(getDefaultProguardFile('proguard-android.txt'), "proguard-rules.pro")
            signingConfig = signingConfigs.release
        }
        debug {
            signingConfig = signingConfigs.debug
        }
    }

    flavorDimensions += "default"
    productFlavors {
        prod {
            dimension = "default"
            resValue("string", "app_name", "Sitemarker")
            signingConfig signingConfigs.release
        }
        develop{
            dimension = "default"
            applicationIdSuffix = ".debug"
            resValue("string", "app_name", "Sitemarker Dev")
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source = "../.."
}

project(':receive_sharing_intent').afterEvaluate {
    project(':receive_sharing_intent').android {
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_17
            targetCompatibility JavaVersion.VERSION_17
        }
        kotlinOptions {
            jvmTarget = '17'
        }
    }
}

